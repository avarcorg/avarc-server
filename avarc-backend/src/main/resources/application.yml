spring:
  application:
    name: avArc Backend

  # === H2 In-Memory Database Configuration ===
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect

  h2:
    console:
      enabled: true
      path: /h2-console

server:
  forward-headers-strategy: FRAMEWORK

# Logging
logging:
  level:
    org.avarc: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

app:
  cors:
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:http://localhost:3000}

messages:
  basename: messages/common,messages/auth,messages/user
  encoding: UTF-8
  fallback-to-system-locale: true
  cache-duration: 3600
mvc:
  locale: en
  locale-resolver: accept-header

# === Spring Boot Actuator Configuration ===
# TODO: These endpoints should be secured via Spring Security in production.
# Consider implementing:
# 1. Basic authentication for actuator endpoints
# 2. IP-based restrictions
# 3. Role-based access control
management:
  endpoints:
    web:
      exposure:
        include: "*"  # Enable all endpoints
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    shutdown:
      access: unrestricted  # Enable shutdown endpoint
    env:
      show-values: always  # Show all environment variables
  health:
    db:
      enabled: true
    defaults:
      enabled: true
  info:
    # Disabled due to BindException when trying to convert environment variables to Map<String, Object>
    # TODO: Investigate why EnvironmentInfoContributor fails to bind properties
    env:
      enabled: false
    git:
      enabled: true
    build:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
    process:
      enabled: true
    app:
      name: ${spring.application.name}
      version: ${project.version}
      description: AVARC Backend Application
