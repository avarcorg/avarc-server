#
# This file is used to deploy the database for the Avarc project.
#
services:
  postgis:
    image: postgis/postgis:17-3.4
    container_name: postgis
    environment:
      POSTGRES_DB: avarc
      POSTGRES_USER: avarc
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-avarc123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - init_scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U avarc"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - avarc-network

  adminer:
    image: adminer:5.1.0
    container_name: adminer
    ports:
      - "8380:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgis
      ADMINER_DEFAULT_USERNAME: avarc
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-avarc123}
      ADMINER_DEFAULT_DB: avarc
      PHP_DISPLAY_ERRORS: 1
      PHP_MEMORY_LIMIT: 256M
    networks:
      - avarc-network
    depends_on:
      postgis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  init_scripts:
    driver: local
    driver_opts:
      type: none
      device: ${INIT_SCRIPTS_PATH}
      o: bind

networks:
  avarc-network:
    driver: bridge
