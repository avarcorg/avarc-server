name: CI

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  GHCR_ORG: avarcorg

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.8.10

      - name: Display Pack CLI
        run: pack --version

      - name: Set up Pack Tools
        uses: buildpacks/github-actions/setup-tools@v5.8.10

      - name: Display Pack Tools
        run: yj -v

      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version: '22.14.0'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          # Use OpenJDK
          distribution: 'temurin'
          java-version: '23'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Extract Maven project version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn --no-transfer-progress -DskipTests -Pwith-docker clean package

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}


      - name: Push Docker image(s)
        if: github.ref == 'refs/heads/main'  # Only push if the branch is main
        run: |
          docker tag avarc-backend:${{ env.VERSION }}  ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:${{ env.VERSION }}
          docker tag avarc-backend:${{ env.VERSION }}  ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:latest
          docker tag avarc-frontend:${{ env.VERSION }} ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:${{ env.VERSION }}
          docker tag avarc-frontend:${{ env.VERSION }} ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:latest
          docker tag avarc-nginx:${{ env.VERSION }}    ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:${{ env.VERSION }}
          docker tag avarc-nginx:${{ env.VERSION }}    ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:latest
          echo
          docker images | grep -v "IMAGE ID" | sort
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:latest
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:latest
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:latest

      - name: Show Docker image label(s)
        run: |
          docker inspect --format="{{json .Config.Labels}}" ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:${{ env.VERSION }} | jq "."
          echo
          docker inspect --format="{{json .Config.Labels}}" ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:${{ env.VERSION }} | jq "."
          echo
          docker inspect --format="{{json .Config.Labels}}" ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:${{ env.VERSION }} | jq "."
