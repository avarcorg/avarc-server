name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GHCR_ORG: avarcorg
  MATTERMOST_BOT_USERNAME: avarc-chatopt-bot

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.7.4

      - name: Display Pack CLI
        run: pack --version

      - name: Set up Pack Tools
        uses: buildpacks/github-actions/setup-tools@v5.7.4

      - name: Display Pack Tools
        run: yj -v

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          # Use OpenJDK
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Extract Maven project version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn --no-transfer-progress -DskipTests -Pwith-docker clean package

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Push Docker image(s)
        run: |
          docker tag avarc-backend:${{ env.VERSION }}  ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:${{ env.VERSION }}
          docker tag avarc-backend:${{ env.VERSION }}  ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:latest
          docker tag avarc-frontend:${{ env.VERSION }} ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:${{ env.VERSION }}
          docker tag avarc-frontend:${{ env.VERSION }} ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:latest
          docker tag avarc-nginx:${{ env.VERSION }}    ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:${{ env.VERSION }}
          docker tag avarc-nginx:${{ env.VERSION }}    ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:latest
          echo
          docker images | grep -v "IMAGE ID" | sort
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-backend:latest
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-frontend:latest
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GHCR_ORG  }}/avarc-nginx:latest

      - name: Notify Mattermost - Success
        if: success()
        uses: mattermost/action-mattermost-notify@master
        with:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_CHANNEL: ${{ secrets.MATTERMOST_CHANNEL }}
          MATTERMOST_USERNAME: ${{ env.MATTERMOST_BOT_USERNAME }}
          TEXT: |
            AvArc Server - Build successful! :rocket:
            [View build details](${{
              github.server_url }}/${{
              github.repository }}/actions/runs/${{
              github.run_id }})

      - name: Notify Mattermost - Failure
        if: failure()
        uses: mattermost/action-mattermost-notify@master
        with:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_CHANNEL: ${{ secrets.MATTERMOST_CHANNEL }}
          MATTERMOST_USERNAME: ${{ env.MATTERMOST_BOT_USERNAME }}
          TEXT: |
            AvArc Server - Build failed! :x:
            [View build details](${{
              github.server_url }}/${{
              github.repository }}/actions/runs/${{
              github.run_id }})
